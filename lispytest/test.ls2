;; If these tests run, you haven't broken the code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Simple variable declaration
(var a 5)
;; Output: var a = 5;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Simple function declaration
(function square (x) 
	(* x x)
	(* x x))
(var sqr (square a))
(console.log sqr)
;; Output: function square(x) { return x * x; }
;; ...	  var sqr = square(a);
;; ...	  console.log(sqr);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Simple arrow function declaration
(=> () 5)
;; Output: (() => {return 5;})

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Variable declaration with arrow function expr
(var a (=> () 5))
;; Output: var a = () => { return 5;};

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Simple Macro Declaration
(macro print (...rest)
	(console.log ~...rest))
 (print "Lets" "print" "a" a)
;; Output: console.log("Lets", "print", "a", a);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Simple if-else construct
(if (* 3 5) ((function abc (x) (* x 1) x) (console.log "true")) ((console.log "false")))
;; Output: if (3 * 5) {
;;...          console.log('true');
;;...      } else {
;;...          console.log('false');
;;...      }

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function declaration which returns a function
(function abc () 
	(=> () null))
(var a (abc))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(if (* (* 4 5) (* 2 4)) ((console.log "True")) ((console.log "False")))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; (function restTest (...args) (console.log args))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(var a [(square) (* 3 4) "sdkhf" 5 3])

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(var a {a: 5, b: 4})