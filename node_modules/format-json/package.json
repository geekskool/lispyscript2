{
  "_args": [
    [
      "format-json@^1.0.3",
      "/media/nikhil/OS/Users/ADMIN/Documents/GitHub/lispyscript2"
    ]
  ],
  "_from": "format-json@>=1.0.3 <2.0.0",
  "_id": "format-json@1.0.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/format-json",
  "_npmUser": {
    "email": "oyasumi@gmail.com",
    "name": "ecmanaut"
  },
  "_npmVersion": "1.2.30",
  "_phantomChildren": {},
  "_requested": {
    "name": "format-json",
    "raw": "format-json@^1.0.3",
    "rawSpec": "^1.0.3",
    "scope": null,
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/format-json/-/format-json-1.0.3.tgz",
  "_shasum": "268e3d3e169792ff49bb5b030f22c87ca1c2cd9f",
  "_shrinkwrap": null,
  "_spec": "format-json@^1.0.3",
  "_where": "/media/nikhil/OS/Users/ADMIN/Documents/GitHub/lispyscript2",
  "author": {
    "email": "oyasumi@gmail.com",
    "name": "Johan SundstrÃ¶m"
  },
  "bin": {
    "format-json": "./format-json.js"
  },
  "bugs": {
    "url": "https://github.com/johan/format-json/issues"
  },
  "dependencies": {},
  "description": "A JSON formatter module for various text/plain serialization styles",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "268e3d3e169792ff49bb5b030f22c87ca1c2cd9f",
    "tarball": "https://registry.npmjs.org/format-json/-/format-json-1.0.3.tgz"
  },
  "homepage": "https://github.com/johan/format-json#readme",
  "maintainers": [
    {
      "email": "oyasumi@gmail.com",
      "name": "ecmanaut"
    }
  ],
  "name": "format-json",
  "optionalDependencies": {},
  "readme": "format-json\n===========\n\nA JSON formatter module for various text/plain serialization styles\n\n```javascript\n> var json = require('format-json');\n> var data = {test: \"for example\", some: [{nested:0, things: []}, {}]};\n> console.log(json.diffy(data));\n{ \"test\": \"for example\"\n, \"some\":\n  [ { \"nested\": 0\n    , \"things\": []\n    }\n  , {}\n  ]\n}\n> console.log(json.plain(data));\n{\n  \"test\": \"for example\",\n  \"some\": [\n    {\n      \"nested\": 0,\n      \"things\": []\n    },\n    {}\n  ]\n}\n> console.log(json.terse(data));\n{\"test\":\"for example\",\"some\":[{\"nested\":0,\"things\":[]},{}]}\n> console.log(json.space(data));\n{ \"test\": \"for example\", \"some\": [ { \"nested\": 0, \"things\": [] }, {} ] }\n> console.log(json.lines(data));\n{ \"test\": \"for example\"\n, \"some\": [ { \"nested\": 0, \"things\": [] }, {} ]\n}\n```\n\n### Why?\n\nFor short: diffs in version controlled JSON is what prompted `json.diffy`.\n\nThe comma-first style may look wonky at first, but it's a compromise that helps\nproduce diffs where a change (addition, change or deletion) of one property has\nno affect on surrounding lines to reduce the amount of diff noise.\n\nHaving used this format for a while now, I also appreciate how you get straight\nleft margins for Objects and Arrays alike.\n\nNot convinced? Then please don't use it! :-)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/johan/format-json.git"
  },
  "version": "1.0.3"
}
